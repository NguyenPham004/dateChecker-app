import React, { useState } from 'react';

function isLeapYear(year) {
  if (year % 4 === 0) {
    if (year % 100 === 0) {
      if (year % 400 === 0) {
        return true;
      } else {
        return false;
      }
    } else {
      return true;
    }
  } else {
    return false;
  }
}

function isValidDate(day, month, year) {
  if (year < 1 || year > 9999) {
    return false;
  }

  if (month < 1 || month > 12) {
    return false;
  }

  if (day < 1) {
    return false;
  }

  if (month === 2) {
    if (isLeapYear(year)) {
      return day <= 29;
    } else {
      return day <= 28;
    }
  }

  const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 
                        31, 30, 31, 30, 31];
  return day <= daysInMonth[month - 1];
}

function App() {
  const [day, setDay] = useState('');
  const [month, setMonth] = useState('');
  const [year, setYear] = useState('');
  const [isValid, setIsValid] = useState(null);

  const handleCheckValidity = () => {
    const isValid = isValidDate(parseInt(day), 
                                parseInt(month), 
                                parseInt(year));
    setIsValid(isValid);
  };

  return (
    <div>
      <label>
        Day:
        <input 
            type="number" 
            value={day} 
            onChange={(e) => setDay(e.target.value)} 
        />
      </label>
      <label>
        Month:
        <input 
            type="number" 
            value={month} 
            onChange={(e) => setMonth(e.target.value)} />
      </label>
      <label>
        Year:
        <input 
            type="number" 
            value={year} 
            onChange={(e) => setYear(e.target.value)} />
      </label>
      <button onClick={handleCheckValidity}>Check Validity</button>
      {isValid !== null && (
        <p>{isValid ? 'The date is valid.' : 'The date is invalid.'}</p>
      )}
    </div>
  );
}

export default App;
